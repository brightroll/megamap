#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use Carp;
use English qw( -no_match_vars );

our $VERSION = 0.3;

# root or die
my $username = ( getpwuid $EUID );
croak "megacli requires root" if $username ne 'root';

# CLI arguments
croak "no arguments... please specify which drives to blink" unless scalar @ARGV;
my @drives = @ARGV;

# pull in megamap
my $megamap = `megamap`;
my @maplines = split /\n/, $megamap;

if ( scalar(@maplines) == 0 ) {
	warn "No output from megamap\n";
	exit 2;
}

my %map;

foreach my $line (@maplines) {
	chomp($line);
	my ( $megaraid_id, $linux_drive, $wwn ) = split( /\t/, $line );
	$map{$linux_drive} = $megaraid_id;
}

# blink all the drives!
foreach my $drive (@drives) {
	$drive =~ s{^/dev/}{}x;
	unless ( $drive =~ /^sd[a-z][a-z]?$/x or $drive =~ /^\d+$/ ) {
		croak "invalid drive spec '$drive', try sdc or 13";
	}
	my $megaraid_id;
	if ( $drive =~ /^\d+$/ ) {
		$megaraid_id = $drive;
	} else {
		$megaraid_id = $map{$drive} or croak "no mapping for $drive";
	}
	print "blinking drive $megaraid_id ($drive), ";
	my $cmd = "megacli -PdLocate -start -physdrv[0:$megaraid_id] -a0";
	print "running $cmd\n";
	system($cmd);
}
